import sys
import os
lib_path = os.path.abspath('lib')
sys.path.append(lib_path)
# print(sys.path)
from canal import *
import numpy as np

canal = {
    "length": 20,
    "delta x": 0.05, 
    "base width": 1.0,
    "z bed": 0.0,
    "angle": 90,
    "manning": 0.00,
    "initial mode": "DAMBREAK",
    "entropy fix": "True",
    "CFL": 0.98, 
    "end time": 0.8,
    "output freq": 1,
    "Non Hydrostatic": "True"
}

dambreak = {
    "position": 10,
    "left height": 1.2,
    "right height": 1,
    "left u": 0,
    "right u": 0,
    "left w": 0.0,
    "right w": 0.0,
    "exact": "False"
}

h_results = [1.199989198, 1.199989972, 1.199991898, 1.199993007, 1.199993619, 1.199993927, 1.199994044, 1.199994041, 1.199993958, 1.199993819, 1.199993638, 1.199993425, 1.199993184, 1.199992917, 1.199992626, 1.199992311, 1.199991972, 1.199991608, 1.199991219, 1.199990804, 1.199990362, 1.199989890, 1.199989389, 1.199988857, 1.199988292, 1.199987692, 1.199987057, 1.199986384, 1.199985670, 1.199984916, 1.199984117, 1.199983272, 1.199982379, 1.199981435, 1.199980437, 1.199979383, 1.199978269, 1.199977093, 1.199975852, 1.199974541, 1.199973158, 1.199971697, 1.199970157, 1.199968531, 1.199966817, 1.199965008, 1.199963100, 1.199961088, 1.199958967, 1.199956730, 1.199954371, 1.199951885, 1.199949264, 1.199946502, 1.199943590, 1.199940521, 1.199937287, 1.199933880, 1.199930289, 1.199926506, 1.199922521, 1.199918322, 1.199913899, 1.199909240, 1.199904333, 1.199899165, 1.199893723, 1.199887991, 1.199881956, 1.199875602, 1.199868912, 1.199861868, 1.199854453, 1.199846648, 1.199838432, 1.199829785, 1.199820684, 1.199811106, 1.199801028, 1.199790423, 1.199779265, 1.199767525, 1.199755175, 1.199742183, 1.199728518, 1.199714144, 1.199699027, 1.199683130, 1.199666412, 1.199648834, 1.199630352, 1.199610921, 1.199590494, 1.199569022, 1.199546454, 1.199522734, 1.199497806, 1.199471611, 1.199444086, 1.199415167, 1.199384785, 1.199352870, 1.199319346, 1.199284136, 1.199247158, 1.199208327, 1.199167553, 1.199124744, 1.199079801, 1.199032624, 1.198983105, 1.198931133, 1.198876593, 1.198819363, 1.198759316, 1.198696320, 1.198630237, 1.198560923, 1.198488227, 1.198411994, 1.198332059, 1.198248253, 1.198160396, 1.198068305, 1.197971786, 1.197870638, 1.197764651, 1.197653608, 1.197537282, 1.197415436, 1.197287824, 1.197154191, 1.197014271, 1.196867787, 1.196714453, 1.196553968, 1.196386024, 1.196210297, 1.196026455, 1.195834149, 1.195633020, 1.195422695, 1.195202786, 1.194972893, 1.194732599, 1.194481475, 1.194219076, 1.193944940, 1.193658590, 1.193359535, 1.193047265, 1.192721253, 1.192380958, 1.192025818, 1.191655255, 1.191268674, 1.190865461, 1.190444985, 1.190006594, 1.189549619, 1.189073375, 1.188577153, 1.188060231, 1.187521864, 1.186961291, 1.186377731, 1.185770388, 1.185138445, 1.184481068, 1.183797408, 1.183086599, 1.182347758, 1.181579987, 1.180782376, 1.179954000, 1.179093923, 1.178201197, 1.177274866, 1.176313965, 1.175317524, 1.174284569, 1.173214123, 1.172105210, 1.170956857, 1.169768097, 1.168537972, 1.167265534, 1.165949855, 1.164590022, 1.163185152, 1.161734385, 1.160236899, 1.158691910, 1.157098680, 1.155456521, 1.153764806, 1.152022974, 1.150230535, 1.148387087, 1.146492316, 1.144546012, 1.142548077, 1.140498538, 1.138397558, 1.136245454, 1.134042702, 1.131789962, 1.129488090, 1.127138156, 1.124741465, 1.122299576, 1.119814325, 1.117287848, 1.114722609, 1.112121426, 1.109487502, 1.106824458, 1.104136367, 1.101427797, 1.098703852, 1.095970221, 1.093233234, 1.090499928, 1.087778120, 1.085076497, 1.082404722, 1.079773561, 1.077195030, 1.074682577, 1.072251279, 1.069918066, 1.067701958, 1.065624296, 1.063708925, 1.061982310, 1.060473492, 1.059213824, 1.058236377, 1.057574906, 1.057262275, 1.057328248, 1.057796628, 1.058681842, 1.059985233, 1.061691600, 1.063766854, 1.066158018, 1.068797148, 1.071610758, 1.074535640, 1.077539320, 1.080637750, 1.083897468, 1.087412514, 1.091261173, 1.095463818, 1.099965149, 1.104649084, 1.109374717, 1.114012266, 1.118463103, 1.122660597, 1.126558897, 1.130119616, 1.133303356, 1.136068036, 1.138372361, 1.140181449, 1.141471993, 1.142235420, 1.142478607, 1.142222489, 1.141499240, 1.140348811, 1.138815470, 1.136944801, 1.134781389, 1.132367265, 1.129741031, 1.126937523, 1.123987851, 1.120919669, 1.117757537, 1.114523313, 1.111236500, 1.107914553, 1.104573114, 1.101226214, 1.097886413, 1.094564934, 1.091271758, 1.088015718, 1.084804582, 1.081645130, 1.078543226, 1.075503888, 1.072531360, 1.069629169, 1.066800192, 1.064046710, 1.061370466, 1.058772715, 1.056254272, 1.053815557, 1.051456637, 1.049177268, 1.046976926, 1.044854842, 1.042810036, 1.040841341, 1.038947431, 1.037126842, 1.035377998, 1.033699227, 1.032088777, 1.030544839, 1.029065553, 1.027649026, 1.026293343, 1.024996575, 1.023756791, 1.022572064, 1.021440480, 1.020360142, 1.019329177, 1.018345739, 1.017408018, 1.016514235, 1.015662652, 1.014851572, 1.014079339, 1.013344344, 1.012645020, 1.011979850, 1.011347361, 1.010746127, 1.010174770, 1.009631961, 1.009116413, 1.008626888, 1.008162195, 1.007721184, 1.007302753, 1.006905839, 1.006529425, 1.006172534, 1.005834227, 1.005513608, 1.005209815, 1.004922024, 1.004649450, 1.004391336, 1.004146965, 1.003915648, 1.003696727, 1.003489577, 1.003293599, 1.003108223, 1.002932905, 1.002767127, 1.002610396, 1.002462242, 1.002322217, 1.002189896, 1.002064873, 1.001946765, 1.001835205, 1.001729844, 1.001630354, 1.001536418, 1.001447741, 1.001364037, 1.001285040, 1.001210493, 1.001140156, 1.001073799, 1.001011203, 1.000952165, 1.000896487, 1.000843984, 1.000794483, 1.000747815, 1.000703825, 1.000662362, 1.000623287, 1.000586465, 1.000551771, 1.000519084, 1.000488293, 1.000459289, 1.000431972, 1.000406247, 1.000382023, 1.000359214, 1.000337741, 1.000317526, 1.000298498, 1.000280589, 1.000263734, 1.000247874, 1.000232949, 1.000218908, 1.000205698, 1.000193271, 1.000181582, 1.000170587, 1.000160248, 1.000150525, 1.000141382, 1.000132785, 1.000124703, 1.000117105, 1.000109963, 1.000103249, 1.000096939, 1.000091010, 1.000085437, 1.000080201, 1.000075281, 1.000070658, 1.000066315, 1.000062236, 1.000058404, 1.000054804, 1.000051424, 1.000048249, 1.000045268, 1.000042468, 1.000039840, 1.000037372, 1.000035055, 1.000032880, 1.000030838, 1.000028921, 1.000027123, 1.000025434, 1.000023850, 1.000022363, 1.000020968, 1.000019659, 1.000018431, 1.000017278, 1.000016197, 1.000015183, 1.000014232, 1.000013340, 1.000012503, 1.000011718, 1.000010983, 1.000010292, 1.000009645, 1.000009039, 1.000008470, 1.000007937, 1.000007437, 1.000006968, 1.000006529, 1.000006118, 1.000005732, 1.000005371, 1.000005032, 1.000004715, 1.000004418, 1.000004140, 1.000003879, 1.000003635, 1.000003407, 1.000003193, 1.000002993, 1.000002806, 1.000002630, 1.000002467, 1.000002313, 1.000002170, 1.000002036, 1.000001912, 1.000001795, 1.000001686, 1.000001585, 1.000001490, 1.000001402, 1.000001320, 1.000001244, 1.000001173, 1.000001108, 1.000001047, 1.000000992, 1.000000941, 1.000000894, 1.000000852, 1.000000816, 1.000000785, 1.000000761, 1.000000748, 1.000000749, 1.000000775, 1.000000841, 1.000000975, 1.000001227, 1.000001321]

print(len(h_results))
n = int(canal["length"]/canal["delta x"])
resampled_h_results = np.interp(np.linspace(0, canal["length"],n), np.linspace(0, canal["length"],len(h_results)), h_results)

h_results = resampled_h_results

def mean_error(h_results, h_exact):
    return np.sum(np.sqrt((h_results - h_exact)**2))/len(h_results)


def test_dam_break_waves():
    river = Canal(test=True, canal=canal, case=dambreak)
    river.temporal_loop(mode='wave')
    error = mean_error(h_results, river.h)
    print("Error: ", error)
    # plt.plot(river.h)
    # plt.plot(h_results) 
    # plt.show()

    assert error < 1e-3

def test_dam_break_fluxes():
    river = Canal(test=True, canal=canal, case=dambreak)
    river.temporal_loop(mode='flux')
    error = mean_error(h_results, river.h)
    # plt.plot(river.h)
    # plt.plot(h_results) 
    # plt.show()
    assert error < 1e-3


if __name__ == '__main__':
    test_dam_break_waves()
    test_dam_break_fluxes()
    print("All tests passed!")